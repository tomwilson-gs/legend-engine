/*
 *  Copyright 2022 Goldman Sachs
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

function meta::legend::service::validation::assertCollectionEmpty(collection: Any[*], message: String[1]):Boolean[1]
{
   $collection->assertEmpty($message);
}

function meta::legend::service::validation::assertTabularDataSetEmpty(tds: TabularDataSet[1], message: String[1]):Boolean[1]
{
   $tds->tdsRows()->assertEmpty($message);
}

// Syntactic Suger
function meta::legend::service::validation::rowCountGreaterThan(tds: TabularDataSet[1], lowerLimit: Number[1], message: String[1]): Boolean[1]
{
  $tds->groupBy([], agg('count', r:TDSRow[1]|$r, y|$y->count()))->filter(row|$row.getInteger('count') <= $lowerLimit)-> meta::legend::service::validation::assertTabularDataSetEmpty($message);
}